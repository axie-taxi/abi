/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface OfferAuctionContractInterface extends utils.Interface {
  contractName: "OfferAuctionContract";
  functions: {
    "acceptOffer(address,uint256,address,uint256)": FunctionFragment;
    "admin()": FunctionFragment;
    "cancelOffer(address,uint256)": FunctionFragment;
    "changeAdmin(address)": FunctionFragment;
    "createOffer(uint8[],address[],uint256[],address,uint256,uint256)": FunctionFragment;
    "exchangeContract()": FunctionFragment;
    "offers(address,uint256,address)": FunctionFragment;
    "ownerCut()": FunctionFragment;
    "pause()": FunctionFragment;
    "paused()": FunctionFragment;
    "rejectOffer(address,address,uint256)": FunctionFragment;
    "removeAdmin()": FunctionFragment;
    "revalidateOffer(address,address,uint256)": FunctionFragment;
    "revalidateRelatedAuctions(uint256)": FunctionFragment;
    "setOwnerCut(uint256)": FunctionFragment;
    "unpause()": FunctionFragment;
    "updateExchangeContract(address)": FunctionFragment;
    "withdrawEther()": FunctionFragment;
    "withdrawToken(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptOffer",
    values: [string, BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "admin", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "cancelOffer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "changeAdmin", values: [string]): string;
  encodeFunctionData(
    functionFragment: "createOffer",
    values: [
      BigNumberish[],
      string[],
      BigNumberish[],
      string,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "exchangeContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "offers",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(functionFragment: "ownerCut", values?: undefined): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rejectOffer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revalidateOffer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "revalidateRelatedAuctions",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setOwnerCut",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "updateExchangeContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawEther",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawToken",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "admin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "cancelOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exchangeContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "offers", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerCut", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rejectOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revalidateOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revalidateRelatedAuctions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOwnerCut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateExchangeContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawEther",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawToken",
    data: BytesLike
  ): Result;

  events: {
    "AdminChanged(address,address)": EventFragment;
    "AdminRemoved(address)": EventFragment;
    "OfferAccepted(address,address,uint256,address,uint256)": EventFragment;
    "OfferCanceled(address,address,uint256)": EventFragment;
    "OfferCreated(address,uint256,address,uint256)": EventFragment;
    "OfferRejected(address,address,uint256)": EventFragment;
    "Paused()": EventFragment;
    "Unpaused()": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AdminChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AdminRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferAccepted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferCanceled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferRejected"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
}

export type AdminChangedEvent = TypedEvent<
  [string, string],
  { _oldAdmin: string; _newAdmin: string }
>;

export type AdminChangedEventFilter = TypedEventFilter<AdminChangedEvent>;

export type AdminRemovedEvent = TypedEvent<[string], { _oldAdmin: string }>;

export type AdminRemovedEventFilter = TypedEventFilter<AdminRemovedEvent>;

export type OfferAcceptedEvent = TypedEvent<
  [string, string, BigNumber, string, BigNumber],
  {
    _seller: string;
    _buyer: string;
    _listingIndex: BigNumber;
    _token: string;
    _price: BigNumber;
  }
>;

export type OfferAcceptedEventFilter = TypedEventFilter<OfferAcceptedEvent>;

export type OfferCanceledEvent = TypedEvent<
  [string, string, BigNumber],
  { _offerer: string; _token: string; _listingIndex: BigNumber }
>;

export type OfferCanceledEventFilter = TypedEventFilter<OfferCanceledEvent>;

export type OfferCreatedEvent = TypedEvent<
  [string, BigNumber, string, BigNumber],
  {
    _offerer: string;
    _listingIndex: BigNumber;
    _token: string;
    _price: BigNumber;
  }
>;

export type OfferCreatedEventFilter = TypedEventFilter<OfferCreatedEvent>;

export type OfferRejectedEvent = TypedEvent<
  [string, string, BigNumber],
  { _offerer: string; _token: string; _listingIndex: BigNumber }
>;

export type OfferRejectedEventFilter = TypedEventFilter<OfferRejectedEvent>;

export type PausedEvent = TypedEvent<[], {}>;

export type PausedEventFilter = TypedEventFilter<PausedEvent>;

export type UnpausedEvent = TypedEvent<[], {}>;

export type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;

export interface OfferAuctionContract extends BaseContract {
  contractName: "OfferAuctionContract";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OfferAuctionContractInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    acceptOffer(
      _offerer: string,
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    admin(overrides?: CallOverrides): Promise<[string]>;

    cancelOffer(
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeAdmin(
      _newAdmin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createOffer(uint8[],address[],uint256[],address,uint256,uint256)"(
      _tokenTypes: BigNumberish[],
      _tokenAddresses: string[],
      _tokenNumbers: BigNumberish[],
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createOffer(uint256,address,uint256,uint256)"(
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    exchangeContract(overrides?: CallOverrides): Promise<[string]>;

    offers(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        offerer: string;
        price: BigNumber;
        state: BigNumber;
      }
    >;

    ownerCut(overrides?: CallOverrides): Promise<[BigNumber]>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    rejectOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeAdmin(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    revalidateOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    revalidateRelatedAuctions(
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setOwnerCut(
      _newOwnerCut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateExchangeContract(
      _exchangeContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawEther(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  acceptOffer(
    _offerer: string,
    _listingIndex: BigNumberish,
    _token: string,
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  admin(overrides?: CallOverrides): Promise<string>;

  cancelOffer(
    _token: string,
    _listingIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeAdmin(
    _newAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createOffer(uint8[],address[],uint256[],address,uint256,uint256)"(
    _tokenTypes: BigNumberish[],
    _tokenAddresses: string[],
    _tokenNumbers: BigNumberish[],
    _token: string,
    _price: BigNumberish,
    _state: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createOffer(uint256,address,uint256,uint256)"(
    _listingIndex: BigNumberish,
    _token: string,
    _price: BigNumberish,
    _state: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  exchangeContract(overrides?: CallOverrides): Promise<string>;

  offers(
    arg0: string,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, BigNumber] & {
      offerer: string;
      price: BigNumber;
      state: BigNumber;
    }
  >;

  ownerCut(overrides?: CallOverrides): Promise<BigNumber>;

  pause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  rejectOffer(
    _offerer: string,
    _token: string,
    _listingIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeAdmin(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  revalidateOffer(
    _offerer: string,
    _token: string,
    _listingIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  revalidateRelatedAuctions(
    _listingIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setOwnerCut(
    _newOwnerCut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unpause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateExchangeContract(
    _exchangeContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawEther(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawToken(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptOffer(
      _offerer: string,
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    admin(overrides?: CallOverrides): Promise<string>;

    cancelOffer(
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    changeAdmin(_newAdmin: string, overrides?: CallOverrides): Promise<void>;

    "createOffer(uint8[],address[],uint256[],address,uint256,uint256)"(
      _tokenTypes: BigNumberish[],
      _tokenAddresses: string[],
      _tokenNumbers: BigNumberish[],
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "createOffer(uint256,address,uint256,uint256)"(
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    exchangeContract(overrides?: CallOverrides): Promise<string>;

    offers(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, BigNumber] & {
        offerer: string;
        price: BigNumber;
        state: BigNumber;
      }
    >;

    ownerCut(overrides?: CallOverrides): Promise<BigNumber>;

    pause(overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    rejectOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    removeAdmin(overrides?: CallOverrides): Promise<void>;

    revalidateOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    revalidateRelatedAuctions(
      _listingIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setOwnerCut(
      _newOwnerCut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    unpause(overrides?: CallOverrides): Promise<void>;

    updateExchangeContract(
      _exchangeContract: string,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawEther(overrides?: CallOverrides): Promise<void>;

    withdrawToken(_token: string, overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "AdminChanged(address,address)"(
      _oldAdmin?: string | null,
      _newAdmin?: string | null
    ): AdminChangedEventFilter;
    AdminChanged(
      _oldAdmin?: string | null,
      _newAdmin?: string | null
    ): AdminChangedEventFilter;

    "AdminRemoved(address)"(_oldAdmin?: string | null): AdminRemovedEventFilter;
    AdminRemoved(_oldAdmin?: string | null): AdminRemovedEventFilter;

    "OfferAccepted(address,address,uint256,address,uint256)"(
      _seller?: null,
      _buyer?: null,
      _listingIndex?: null,
      _token?: null,
      _price?: null
    ): OfferAcceptedEventFilter;
    OfferAccepted(
      _seller?: null,
      _buyer?: null,
      _listingIndex?: null,
      _token?: null,
      _price?: null
    ): OfferAcceptedEventFilter;

    "OfferCanceled(address,address,uint256)"(
      _offerer?: null,
      _token?: null,
      _listingIndex?: null
    ): OfferCanceledEventFilter;
    OfferCanceled(
      _offerer?: null,
      _token?: null,
      _listingIndex?: null
    ): OfferCanceledEventFilter;

    "OfferCreated(address,uint256,address,uint256)"(
      _offerer?: null,
      _listingIndex?: null,
      _token?: null,
      _price?: null
    ): OfferCreatedEventFilter;
    OfferCreated(
      _offerer?: null,
      _listingIndex?: null,
      _token?: null,
      _price?: null
    ): OfferCreatedEventFilter;

    "OfferRejected(address,address,uint256)"(
      _offerer?: null,
      _token?: null,
      _listingIndex?: null
    ): OfferRejectedEventFilter;
    OfferRejected(
      _offerer?: null,
      _token?: null,
      _listingIndex?: null
    ): OfferRejectedEventFilter;

    "Paused()"(): PausedEventFilter;
    Paused(): PausedEventFilter;

    "Unpaused()"(): UnpausedEventFilter;
    Unpaused(): UnpausedEventFilter;
  };

  estimateGas: {
    acceptOffer(
      _offerer: string,
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    admin(overrides?: CallOverrides): Promise<BigNumber>;

    cancelOffer(
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeAdmin(
      _newAdmin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createOffer(uint8[],address[],uint256[],address,uint256,uint256)"(
      _tokenTypes: BigNumberish[],
      _tokenAddresses: string[],
      _tokenNumbers: BigNumberish[],
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createOffer(uint256,address,uint256,uint256)"(
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    exchangeContract(overrides?: CallOverrides): Promise<BigNumber>;

    offers(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerCut(overrides?: CallOverrides): Promise<BigNumber>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    rejectOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeAdmin(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    revalidateOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    revalidateRelatedAuctions(
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setOwnerCut(
      _newOwnerCut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateExchangeContract(
      _exchangeContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawEther(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptOffer(
      _offerer: string,
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    cancelOffer(
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeAdmin(
      _newAdmin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createOffer(uint8[],address[],uint256[],address,uint256,uint256)"(
      _tokenTypes: BigNumberish[],
      _tokenAddresses: string[],
      _tokenNumbers: BigNumberish[],
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createOffer(uint256,address,uint256,uint256)"(
      _listingIndex: BigNumberish,
      _token: string,
      _price: BigNumberish,
      _state: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    exchangeContract(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    offers(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerCut(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rejectOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeAdmin(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    revalidateOffer(
      _offerer: string,
      _token: string,
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    revalidateRelatedAuctions(
      _listingIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setOwnerCut(
      _newOwnerCut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateExchangeContract(
      _exchangeContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawEther(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
